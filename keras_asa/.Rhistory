data = read.csv(file.choose(), sep = "\t")
summary(data)
###### ANALYZE CV RESUTS (MERGE) ######
mel_acc_data = read.csv(file.choose(), sep = "\t")
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
summary(merge_data)
mse(merge_data$true, merge_data$pred)
require(Metrics)
require(ggplot2)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
require(Metrics)
require(ggplot2)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
require(Metrics)
require(ggplot2)
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
summary(merge_data)
require(Metrics)
require(ggplot2)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
require(Metrics)
require(ggplot2)
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
summary(merge_data)
require(Metrics)
require(ggplot2)
###### ANALYZE CV RESUTS (MERGE) ######
merge_data = read.csv(file.choose(), sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "Stimuli", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
summary(merge_data)
mse(merge_data$true, merge_data$pred)
summary(lm(true ~ pred, merge_data))
View(merge_data)
###### ANALYZE CV RESUTS (MERGE) ######
golden_data = read.csv(file.choose())
summary(golden_data)
golden_data = rename(golden_data, avg_score = "avg_score")
require(dplyr)
install.packages(dplyr)
install.packages("dplyr")
require(dplyr)
golden_data = rename(golden_data, avg_score = "avg_score")
merge_data = left_join(merge_data, golden_data)
summary(golden_data)
golden_data = rename(golden_data, avg_scores = "avg_score")
merge_data = left_join(merge_data, golden_data)
summary(golden_data)
golden_data = rename(golden_data, avg_scores = avg_scores)
summary(golden_data)
merge_data = left_join(merge_data, golden_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data = left_join(merge_data, golden_data)
summary(golden_data)
summary(merge_data)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
merge_data = left_join(merge_data, golden_data)
summary(golden_data)
summary(merge_data)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
summary(golden_data)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
summary(golden_data)
length(golden_data$stimulus)
merge_data = read.csv(file.choose(), sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
merge_data = read.csv(file.choose(), sep = "\t")
# setwd("/Users/seongjinpark/PhD/Diss/automatic_speech_eval/keras_asa")
setwd("/home/seongjinpark/research/git_repo/automatic_speech_eval/keras_asa")
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
golden_data = rename(golden_data, avg_scores = avg_scores)
golden_data = rename(golden_data, avg_score = avg_scores)
golden_data = rename(golden_data, avg_score = avg_score)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
golden_data = rename(golden_data, avg_score = true)
golden_data = rename(golden_data, merge_data$true = avg_score)
golden_data = rename(golden_data, true = avg_score)
summary(golden_data)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
golden_data = rename(golden_data, stimulus = avg_score)
golden_data = rename(golden_data, stimulus = stimulus)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
merge_data$avr = golden_data$avg_score[match(merge_data$stimulus, golden_data$stimulus)]
summmary(merge_data)
summary(merge_data)
summary(golden_data)
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
merge_data$stimulus = str_remove(merge_data$stimulus, ".wav")
require(remove)
install.packages("remove")
str_replace
str_replace()
require(stringr)
install.packages("stringr")
merge_data$stimulus = str_remove(merge_data$stimulus, ".wav")
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
require(stringr)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
summary(merge_data)
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
golden_data= rename(golden_data, stimulus = avg_score)
golden_data= rename(golden_data, true = avg_score)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_acc.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/accented_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
golden_data = rename(golden_data, stimulus = stimulus)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data$avg_score = merge_data$avg_score - 1
summary(merge_data)
mse(merge_data$avg_score, merge_data$pred)
summary(lm(avg_score ~ pred, merge_data))
merge_data = read.csv("results/raw_phon_10CV_comp.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/comp_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
golden_data = rename(golden_data, stimulus = stimulus)
merge_data = left_join(merge_data, golden_data)
merge_data$avg_score = merge_data$avg_score - 1
summary(merge_data)
summary(merge_data)
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_comp.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
merge_data = read.csv("results/raw_phon_10CV_comp.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_comp.txt", sep = "\t")
summary(merge_data)
xt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/comp_avgs.csv")
summary(golden_data)
length(golden_data$stimulus)
golden_data = rename(golden_data, stimulus = stimulus)
merge_data = left_join(merge_data, golden_data)
merge_data$avg_score = merge_data$avg_score - 1
summary(merge_data)
merge_data = read.csv("results/raw_phon_10CV_comp.txt", sep = "\t")
summary(merge_data)
colnames(merge_data) = c("CV", "stimulus", "true", "pred")
merge_data$CV = as.factor(merge_data$CV)
merge_data$stimulus = str_replace(merge_data$stimulus, ".wav", "")
merge_data$stimulus = as.factor(merge_data$stimulus)
summary(merge_data)
golden_data = read.csv("data/perception_results/comp_avgs.csv")
summary(golden_data)
golden_data = rename(golden_data, stimulus = stimulus)
merge_data = left_join(merge_data, golden_data)
summary(merge_data)
merge_data$avg_score = merge_data$avg_score - 1
mse(merge_data$avg_score, merge_data$pred)
summary(lm(avg_score ~ pred, merge_data))
